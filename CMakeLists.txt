cmake_minimum_required(VERSION 3.0)

project(HDTN VERSION 1.0)
#set(CMAKE_BUILD_TYPE Debug)
set(CMAKE_CXX_STANDARD 11)
find_package(Boost 1.67.0 REQUIRED system filesystem timer thread regex filesystem program_options unit_test_framework iostreams)
# define _WIN32_WINNT to use Windows 10 for boost
if(WIN32)
    add_compile_definitions(_CRT_SECURE_NO_WARNINGS)
    add_compile_definitions(_WIN32_WINNT=0x0A00)
endif()

OPTION(USE_BRIAN_STORAGE "use brian's storage solution" ON)
if(USE_BRIAN_STORAGE)
    add_compile_definitions(USE_BRIAN_STORAGE)
endif()

OPTION(SDNV_USE_HARDWARE_ACCELERATION "Use CPU SSE/SSE2/BMI1/BMI2 instructions" ON)
if(SDNV_USE_HARDWARE_ACCELERATION)
    add_compile_definitions(SDNV_USE_HARDWARE_ACCELERATION)
    if(NOT WIN32)
        SET(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -msse -msse2 -mbmi -mbmi2 -mssse3 -mavx -mavx2")
    endif()
endif()

if (WIN32)
	#add_compile_definitions(ZMQ_STATIC)
	set(libzmq_INCLUDE "C:/libzmq_msvc_x64/include" CACHE PATH "Folder to Libzmq headers")
	set(libzmq_LIB "C:/libzmq_msvc_x64/lib/libzmq-v141-mt-4_3_4.lib" CACHE FILEPATH "Libzmq library")
	set(pthread_LIB "")
	set(blosc_LIB "")
else()
	set(libzmq_INCLUDE "")
	set(libzmq_LIB zmq)
	set(pthread_LIB pthread)
	set(blosc_LIB blosc)
endif()

add_subdirectory(common/bpcodec)
add_subdirectory(common/util)
add_subdirectory(common/tcpcl)
add_subdirectory(common/stcp)
add_subdirectory(common/udp)
add_subdirectory(common/regsvr/lib)
add_subdirectory(module/storage)
add_subdirectory(module/storage/storage-brian)
add_subdirectory(module/ingress)
add_subdirectory(module/egress)

add_subdirectory(tests/unit_tests)
add_subdirectory(tests/integrated_tests)

